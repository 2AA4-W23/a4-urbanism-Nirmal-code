package ca.mcmaster.cas.se2aa4.a2.generator.Polygon;

import ca.mcmaster.cas.se2aa4.a2.generator.CustomSegments;
import ca.mcmaster.cas.se2aa4.a2.generator.CustomVertex;

import java.util.ArrayList;
import java.util.List;

public class IrregularPolygon extends GeneratePolygon {

    public IrregularPolygon(List<CustomVertex> cusVertices, int newCentroidIndex, List<Integer> indexNeighbourCentroids){
        this.centroid=centroids.get(newCentroidIndex);
        this.centroid_idx=newCentroidIndex;

        //Sets all vertex values which were generated by Voronoi.
        this.poly_vertices=cusVertices;

        //Creates segments between vertices. Directly checks for overlap.
        this.poly_segment=makeSegments(poly_vertices);

        //Indexes segment locations in segments list.
        this.segment_index=getSegmentIndex(this.poly_segment);

        //Creates the neighbour segments
        this.neighbours= makeIregNeighbour(indexNeighbourCentroids);
    }

    protected CustomSegments makeSegment(int v1, int v2){
        CustomSegments s=new CustomSegments(v1,v2,vertices.get(v1),vertices.get(v2), "0.5f", this.centroid_idx);
        for (CustomSegments c: segments){
            //If segment already made, then this polygon is neighbour to the one whose segment is already made. For Regular Polygon only.
            if ((c.getV1() ==v1 & c.getV2() ==v2 | c.getV2() ==v1 & c.getV1() ==v2)){
                return c;
            }
        }
        segments.add(s);
        return s;
    }

    private List<Integer> makeIregNeighbour(List<Integer> indexNeighbourCentroids){
        List<Integer> all_neighbours=new ArrayList<>();
        for (Integer i: indexNeighbourCentroids){
            CustomSegments new_s=new CustomSegments(this.centroid_idx,i,this.centroid, centroids.get(i), "0.5f");
            segments.add(new_s);
            all_neighbours.add(segments.indexOf(new_s));
        }
        return all_neighbours;
    }
}
